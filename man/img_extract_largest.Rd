% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/img_extract_largest.R
\name{img_extract_largest}
\alias{img_extract_largest}
\title{Extract largest object from a greyscale image}
\usage{
img_extract_largest(x, threshold = 1 - 2/255)
}
\arguments{
\item{x}{a greyscale image, of type \code{\link[imager:cimg]{imager::cimg()}}}

\item{threshold}{grey value threshold to detect the object over the background, in \verb{[0,1]} where \code{0} is pure black and \code{1} is pure white. The default threshold value of \code{1-2/255} keeps almost all pixels that are not pure white in an image that was originally coded as 8-bit (i.e. in \verb{[0,255]}).}
}
\value{
The extracted object, on a pure white background, as a \code{\link[imager:cimg]{imager::cimg()}} object.
}
\description{
Extract the largest dark object over a light image background.
}
\examples{
# get an input image with lots of white space, several blobs and a legend
path <- system.file("extdata", "16195419.jpg", package="morphr")
x <- img_read(path)
img_show(x)

# extract its largest object
img_extract_largest(x) \%>\% img_show()

# if we want to be sure to pick up the object itself and not the legend,
# we can start by chopping the legend away
x \%>\% img_chop(b=31) \%>\% img_extract_largest() \%>\% img_show()
}
