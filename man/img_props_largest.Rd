% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/img_props_largest.R
\name{img_props_largest}
\alias{img_props_largest}
\title{Measure properties of the largest object in an image}
\usage{
img_props_largest(paths, properties = c("area", "mean_intensity"),
  top = 0, right = 0, bottom = 0, left = 0, threshold = 0)
}
\arguments{
\item{paths}{paths to the input image files.}

\item{properties}{vector of at least \emph{two} image properties to measure. See \href{https://scikit-image.org/docs/dev/api/skimage.measure.html#skimage.measure.regionprops}{scikit-image's documentation} for a list of possible properties.}

\item{top}{number of pixels to crop from each side of the image before detecting the largest object.}

\item{right}{number of pixels to crop from each side of the image before detecting the largest object.}

\item{bottom}{number of pixels to crop from each side of the image before detecting the largest object.}

\item{left}{number of pixels to crop from each side of the image before detecting the largest object.}

\item{threshold}{threshold to detect the object from the background. Images are inverted when read and the input grey levels are scaled from 0 (black) to 1 (white). Threshold values should therefore be in \code{[0,1]} and typically around 2/255, to remove almost pure black backgrounds.}
}
\value{
A data.frame of image properties.
}
\description{
Measure properties of the largest object in an image
}
\details{
Each input image is read, inverted and thresholded. Then, thresholded sections are measured and only the largest one is kept. Finally the properties of this largest region are recorded.
}
\examples{
# measure a batch of clean images
input  <- system.file("extdata", "amphipoda", package="morphr")
img_files <- list.files(input, full.names=TRUE)
img_props_largest(img_files, properties=c("area", "perimeter", "mean_intensity"), threshold=2/255)

# measure one image with extra stuff on it
img_file  <- system.file("extdata", "16195419.jpg", package="morphr")
imshow(imread(img_file))
img_props_largest(img_file, properties=c("area", "perimeter", "mean_intensity"),
                  bottom=31, threshold=2/255)
}
